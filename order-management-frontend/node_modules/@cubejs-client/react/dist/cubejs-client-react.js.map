{"version":3,"file":"cubejs-client-react.js","sources":["../src/CubeContext.js","../src/QueryRenderer.jsx","../src/QueryRendererWithTotals.jsx","../src/utils.js","../src/QueryBuilder.jsx","../src/CubeProvider.jsx","../src/hooks/deep-compare-memoize.js","../src/hooks/is-mounted.js","../src/hooks/cube-fetch.js","../src/hooks/cube-sql.js","../src/hooks/dry-run.js","../src/hooks/lazy-dry-run.js","../src/hooks/cube-query.js","../src/hooks/cube-meta.js"],"sourcesContent":["import { createContext } from 'react';\n\nexport default createContext(null);\n","import React from 'react';\nimport { equals, toPairs, fromPairs } from 'ramda';\nimport { isQueryPresent } from '@cubejs-client/core';\n\nimport CubeContext from './CubeContext';\n\nexport default class QueryRenderer extends React.Component {\n  static contextType = CubeContext;\n\n  static defaultProps = {\n    cubeApi: null,\n    query: null,\n    render: null,\n    queries: null,\n    loadSql: null,\n    updateOnlyOnStateChange: false,\n    resetResultSetOnChange: true\n  };\n\n  // @deprecated use `isQueryPresent` from `@cubejs-client/core`\n  static isQueryPresent(query) {\n    return isQueryPresent(query);\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.mutexObj = {};\n  }\n\n  componentDidMount() {\n    const { query, queries } = this.props;\n    if (query) {\n      this.load(query);\n    }\n    if (queries) {\n      this.loadQueries(queries);\n    }\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const {\n      query, queries, render, cubeApi, loadSql, updateOnlyOnStateChange\n    } = this.props;\n    if (!updateOnlyOnStateChange) {\n      return true;\n    }\n    return !equals(nextProps.query, query)\n      || !equals(nextProps.queries, queries)\n      || ((nextProps.render == null || render == null) && nextProps.render !== render)\n      || nextProps.cubeApi !== cubeApi\n      || nextProps.loadSql !== loadSql\n      || !equals(nextState, this.state)\n      || nextProps.updateOnlyOnStateChange !== updateOnlyOnStateChange;\n  }\n\n  componentDidUpdate(prevProps) {\n    const { query, queries } = this.props;\n    if (!equals(prevProps.query, query)) {\n      this.load(query);\n    }\n\n    if (!equals(prevProps.queries, queries)) {\n      this.loadQueries(queries);\n    }\n  }\n\n  cubeApi() {\n    // eslint-disable-next-line react/destructuring-assignment\n    return this.props.cubeApi || this.context && this.context.cubeApi;\n  }\n\n  load(query) {\n    const { resetResultSetOnChange } = this.props;\n    this.setState({\n      isLoading: true,\n      error: null,\n      sqlQuery: null,\n      ...(resetResultSetOnChange ? { resultSet: null } : {})\n    });\n    const { loadSql } = this.props;\n    const cubeApi = this.cubeApi();\n\n    if (query && isQueryPresent(query)) {\n      if (loadSql === 'only') {\n        cubeApi.sql(query, { mutexObj: this.mutexObj, mutexKey: 'sql' })\n          .then(sqlQuery => this.setState({ sqlQuery, error: null, isLoading: false }))\n          .catch(error => this.setState({\n            ...(resetResultSetOnChange ? { resultSet: null } : {}),\n            error,\n            isLoading: false\n          }));\n      } else if (loadSql) {\n        Promise.all([\n          cubeApi.sql(query, { mutexObj: this.mutexObj, mutexKey: 'sql' }),\n          cubeApi.load(query, { mutexObj: this.mutexObj, mutexKey: 'query' })\n        ]).then(([sqlQuery, resultSet]) => this.setState({\n          sqlQuery, resultSet, error: null, isLoading: false\n        }))\n          .catch(error => this.setState({\n            ...(resetResultSetOnChange ? { resultSet: null } : {}),\n            error,\n            isLoading: false\n          }));\n      } else {\n        cubeApi.load(query, { mutexObj: this.mutexObj, mutexKey: 'query' })\n          .then(resultSet => this.setState({ resultSet, error: null, isLoading: false }))\n          .catch(error => this.setState({\n            ...(resetResultSetOnChange ? { resultSet: null } : {}),\n            error,\n            isLoading: false\n          }));\n      }\n    }\n  }\n\n  loadQueries(queries) {\n    const cubeApi = this.cubeApi();\n    const { resetResultSetOnChange } = this.props;\n    this.setState({\n      isLoading: true,\n      ...(resetResultSetOnChange ? { resultSet: null } : {}),\n      error: null\n    });\n\n    const resultPromises = Promise.all(toPairs(queries).map(\n      ([name, query]) => cubeApi.load(query, { mutexObj: this.mutexObj, mutexKey: name }).then(r => [name, r])\n    ));\n\n    resultPromises\n      .then(resultSet => this.setState({\n        resultSet: fromPairs(resultSet),\n        error: null,\n        isLoading: false\n      }))\n      .catch(error => this.setState({\n        ...(resetResultSetOnChange ? { resultSet: null } : {}),\n        error,\n        isLoading: false\n      }));\n  }\n\n  render() {\n    const {\n      error, queries, resultSet, isLoading, sqlQuery\n    } = this.state;\n    const { render } = this.props;\n\n    const loadState = {\n      error: error ? new Error(error.response?.plainError || error.message || error.toString()) : null,\n      resultSet: queries ? (resultSet || {}) : resultSet,\n      loadingState: { isLoading },\n      sqlQuery\n    };\n\n    if (render) {\n      return render(loadState);\n    }\n\n    return null;\n  }\n}\n","import React from 'react';\nimport QueryRenderer from './QueryRenderer.jsx';\n\nconst QueryRendererWithTotals = ({ query, ...restProps }) => (\n  <QueryRenderer\n    queries={{\n      totals: {\n        ...query,\n        dimensions: [],\n        timeDimensions: query.timeDimensions\n          ? query.timeDimensions.map(td => ({ ...td, granularity: null }))\n          : undefined\n      },\n      main: query\n    }}\n    {...restProps}\n  />\n);\n\nexport default QueryRendererWithTotals;\n","export function removeEmpty(obj) {\n  if (Array.isArray(obj) || typeof obj !== 'object') {\n    return obj;\n  }\n\n  return Object.fromEntries(\n    Object.entries(obj)\n      .filter(([, v]) => v != null)\n      .map(([k, v]) => {\n        if (Array.isArray(v)) {\n          return [k, v.map(removeEmpty)];\n        }\n\n        return [k, typeof v === 'object' ? removeEmpty(v) : v];\n      })\n  );\n}\n","import React from 'react';\nimport { clone, equals, indexBy, pick, prop, uniq, uniqBy } from 'ramda';\nimport {\n  defaultHeuristics,\n  defaultOrder,\n  flattenFilters,\n  getQueryMembers,\n  isQueryPresent,\n  moveItemInArray,\n  movePivotItem,\n  validateQuery,\n  ResultSet,\n  removeEmptyQueryFields\n} from '@cubejs-client/core';\n\nimport QueryRenderer from './QueryRenderer.jsx';\nimport CubeContext from './CubeContext';\nimport { removeEmpty } from './utils';\n\nconst granularities = [\n  { name: undefined, title: 'w/o grouping' },\n  { name: 'second', title: 'Second' },\n  { name: 'minute', title: 'Minute' },\n  { name: 'hour', title: 'Hour' },\n  { name: 'day', title: 'Day' },\n  { name: 'week', title: 'Week' },\n  { name: 'month', title: 'Month' },\n  { name: 'quarter', title: 'Quarter' },\n  { name: 'year', title: 'Year' },\n];\n\nexport default class QueryBuilder extends React.Component {\n  static contextType = CubeContext;\n\n  static defaultProps = {\n    cubeApi: null,\n    stateChangeHeuristics: null,\n    disableHeuristics: false,\n    render: null,\n    wrapWithQueryRenderer: true,\n    defaultChartType: 'line',\n    defaultQuery: {},\n    initialVizState: null,\n    onVizStateChanged: null,\n\n    // deprecated\n    query: null,\n    setQuery: null,\n    vizState: null,\n    setVizState: null,\n  };\n\n  // This is an anti-pattern, only kept for backward compatibility\n  // https://reactjs.org/blog/2018/06/07/you-probably-dont-need-derived-state.html#anti-pattern-unconditionally-copying-props-to-state\n  static getDerivedStateFromProps(props, state) {\n    if (props.query || props.vizState) {\n      const nextState = {\n        ...state,\n        ...(props.vizState || {}),\n      };\n\n      if (Array.isArray(props.query)) {\n        throw new Error('Array of queries is not supported.');\n      }\n\n      return {\n        ...nextState,\n        query: {\n          ...nextState.query,\n          ...(props.query || {}),\n        },\n      };\n    }\n    return null;\n  }\n\n  static resolveMember(type, { meta, query }) {\n    if (!meta) {\n      return [];\n    }\n\n    if (Array.isArray(query)) {\n      return query.reduce(\n        (memo, currentQuery) => memo.concat(\n          QueryBuilder.resolveMember(type, {\n            meta,\n            query: currentQuery,\n          })\n        ),\n        []\n      );\n    }\n\n    if (type === 'timeDimensions') {\n      return (query.timeDimensions || []).map((m, index) => ({\n        ...m,\n        dimension: {\n          ...meta.resolveMember(m.dimension, 'dimensions'),\n          granularities,\n        },\n        index,\n      }));\n    }\n\n    return (query[type] || []).map((m, index) => ({\n      index,\n      ...meta.resolveMember(m, type),\n    }));\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      query: props.defaultQuery || props.query,\n      chartType: props.defaultChartType,\n      validatedQuery: props.query, // deprecated, validatedQuery should not be set until after dry-run for safety\n      missingMembers: [],\n      // todo: rename to `isMetaReady`\n      isFetchingMeta: true,\n      dryRunResponse: null,\n      ...props.vizState, // deprecated\n      ...props.initialVizState,\n    };\n\n    this.mutexObj = {};\n    this.orderMembersOrderKeys = [];\n  }\n\n  async componentDidMount() {\n    this.prevContext = this.context;\n    await this.fetchMeta();\n  }\n\n  async componentDidUpdate(prevProps) {\n    const { schemaVersion, onSchemaChange } = this.props;\n    const { meta } = this.state;\n\n    if (this.prevContext?.cubeApi !== this.context?.cubeApi) {\n      this.prevContext = this.context;\n      await this.fetchMeta();\n    }\n\n    if (prevProps.schemaVersion !== schemaVersion) {\n      try {\n        const newMeta = await this.cubeApi().meta();\n        if (!equals(newMeta, meta) && typeof onSchemaChange === 'function') {\n          onSchemaChange({\n            schemaVersion,\n            refresh: async () => {\n              await this.fetchMeta();\n            },\n          });\n        }\n      } catch (error) {\n        // eslint-disable-next-line\n        this.setState({ metaError: error });\n      }\n    }\n  }\n\n  fetchMeta = async () => {\n    if (!this.cubeApi()) {\n      return;\n    }\n\n    let meta;\n    let metaError = null;\n    let richMetaError = null;\n    let metaErrorStack = null;\n\n    try {\n      this.setState({ isFetchingMeta: true });\n      meta = await this.cubeApi().meta();\n    } catch (error) {\n      metaError = error.response?.plainError || error;\n      richMetaError = error;\n      metaErrorStack = error.response?.stack?.replace(error.message || '', '') || '';\n    }\n\n    this.setState(\n      {\n        meta,\n        metaError: metaError ? new Error(metaError.message || metaError.toString()) : null,\n        richMetaError,\n        metaErrorStack,\n        isFetchingMeta: false,\n      },\n      () => {\n        // Run update query to force viz state update\n        // This will catch any new missing members, and also validate the query against the new meta\n        this.updateQuery({});\n      }\n    );\n  };\n\n  cubeApi() {\n    const { cubeApi } = this.props;\n    // eslint-disable-next-line react/destructuring-assignment\n    return cubeApi || (this.context && this.context.cubeApi);\n  }\n\n  getMissingMembers(query, meta) {\n    if (!meta) {\n      return [];\n    }\n\n    return getQueryMembers(query)\n      .map((member) => {\n        const resolvedMember = meta.resolveMember(member, ['measures', 'dimensions', 'segments']);\n        if (resolvedMember.error) {\n          return member;\n        }\n        return false;\n      })\n      .filter(Boolean);\n  }\n\n  isQueryPresent() {\n    const { query } = this.state;\n    return QueryRenderer.isQueryPresent(query);\n  }\n\n  prepareRenderProps(queryRendererProps) {\n    const getName = (member) => member.name;\n\n    const toTimeDimension = (member) => {\n      const rangeSelection = member.compareDateRange\n        ? { compareDateRange: member.compareDateRange }\n        : { dateRange: member.dateRange };\n\n      return removeEmpty({\n        dimension: member.dimension.name,\n        granularity: member.granularity,\n        ...rangeSelection,\n      });\n    };\n\n    const toFilter = (member) => ({\n      member: member.member?.name || member.dimension?.name,\n      operator: member.operator,\n      ...(['set', 'notSet'].includes(member.operator) ? {} : { values: member.values }),\n    });\n\n    const updateMethods = (memberType, toQuery = getName) => ({\n      add: (member) => {\n        const { query } = this.state;\n        this.updateQuery({\n          [memberType]: (query[memberType] || []).concat(toQuery(member)),\n        });\n      },\n      remove: (member) => {\n        const { query } = this.state;\n\n        return this.updateQuery({\n          [memberType]: (query[memberType] || []).filter((_, index) => index !== member.index),\n        });\n      },\n      update: (member, updateWith) => {\n        const { query } = this.state;\n        const members = (query[memberType] || []).concat([]);\n        members.splice(member.index, 1, toQuery(updateWith));\n        return this.updateQuery({\n          [memberType]: members,\n        });\n      },\n    });\n\n    const {\n      meta,\n      metaError,\n      richMetaError,\n      query,\n      queryError,\n      chartType,\n      pivotConfig,\n      validatedQuery,\n      missingMembers,\n      isFetchingMeta,\n      dryRunResponse,\n      metaErrorStack\n    } = this.state;\n\n    const flatFilters = uniqBy((filter) => `${prop('member', filter)}${prop('operator', filter)}`,\n      flattenFilters((meta && query.filters) || []).map((filter) => ({\n        ...filter,\n        member: filter.member || filter.dimension,\n      })));\n\n    const filters = flatFilters.map((m, i) => ({\n      ...m,\n      dimension: meta.resolveMember(m.member || m.dimension, ['dimensions', 'measures']),\n      operators: meta.filterOperatorsForMember(m.member || m.dimension, ['dimensions', 'measures']),\n      index: i,\n    }));\n\n    const measures = QueryBuilder.resolveMember('measures', this.state);\n    const dimensions = QueryBuilder.resolveMember('dimensions', this.state);\n    const timeDimensions = QueryBuilder.resolveMember('timeDimensions', this.state);\n    const segments = ((meta && query.segments) || []).map((m, i) => ({\n      index: i,\n      ...meta.resolveMember(m, 'segments'),\n    }));\n\n    let availableMeasures = [];\n    let availableDimensions = [];\n    let availableSegments = [];\n    let availableFilterMembers = [];\n\n    const availableMembers = meta?.membersGroupedByCube() || {\n      measures: [],\n      dimensions: [],\n      segments: [],\n      timeDimensions: [],\n    };\n\n    if (meta) {\n      availableMeasures = meta.membersForQuery(query, 'measures');\n      availableDimensions = meta.membersForQuery(query, 'dimensions');\n      availableSegments = meta.membersForQuery(query, 'segments');\n\n      const indexedMeasures = indexBy(prop('cubeName'), availableMembers.measures);\n      const indexedDimensions = indexBy(prop('cubeName'), availableMembers.dimensions);\n      const cubeNames = uniq([...Object.keys(indexedMeasures), ...Object.keys(indexedDimensions)]).sort();\n\n      availableFilterMembers = cubeNames.map((name) => {\n        const cube = indexedMeasures[name] || indexedDimensions[name];\n\n        return {\n          ...cube,\n          members: [\n            ...indexedMeasures[name]?.members,\n            ...indexedDimensions[name]?.members\n          ].sort((a, b) => (a.shortTitle > b.shortTitle ? 1 : -1)),\n        };\n      });\n    }\n\n    const activeOrder = Array.isArray(query.order) ? Object.fromEntries(query.order) : query.order;\n    const members = [\n      ...measures,\n      ...dimensions,\n      ...timeDimensions.map(({ dimension }) => dimension)\n    ];\n\n    let orderMembers = uniqBy(prop('id'), [\n      // uniqBy prefers first, so these will only be added if not already in the query\n      ...members.map(({ name, title }) => ({ id: name, title, order: activeOrder?.[name] || 'none' })),\n    ]);\n\n    if (this.orderMembersOrderKeys.length !== orderMembers.length) {\n      this.orderMembersOrderKeys = orderMembers.map(({ id }) => id);\n    }\n\n    if (this.orderMembersOrderKeys.length) {\n      // Preserve order until the members change or manually re-ordered\n      // This is needed so that when an order member becomes active, it doesn't jump to the top of the list\n      orderMembers = (this.orderMembersOrderKeys || [])\n        .map((id) => orderMembers.find((member) => member.id === id))\n        .filter(Boolean);\n    }\n\n    return {\n      meta,\n      metaError,\n      richMetaError,\n      metaErrorStack,\n      query,\n      error: queryError, // Match same name as QueryRenderer prop\n      validatedQuery,\n      isQueryPresent: this.isQueryPresent(),\n      chartType,\n      measures,\n      dimensions,\n      timeDimensions,\n      segments,\n      filters,\n      orderMembers,\n      availableMeasures,\n      availableDimensions,\n      availableTimeDimensions: availableDimensions.filter((m) => m.type === 'time'),\n      availableSegments,\n      availableMembers,\n      availableFilterMembers,\n      updateQuery: (queryUpdate) => this.updateQuery(queryUpdate),\n      updateMeasures: updateMethods('measures'),\n      updateDimensions: updateMethods('dimensions'),\n      updateSegments: updateMethods('segments'),\n      updateTimeDimensions: updateMethods('timeDimensions', toTimeDimension),\n      updateFilters: updateMethods('filters', toFilter),\n      updateChartType: (newChartType) => this.updateVizState({ chartType: newChartType }),\n      updateOrder: {\n        set: (memberId, newOrder = 'asc') => {\n          this.updateQuery({\n            order: orderMembers\n              .map((orderMember) => ({\n                ...orderMember,\n                order: orderMember.id === memberId ? newOrder : orderMember.order,\n              }))\n              .reduce((acc, { id, order }) => (order !== 'none' ? [...acc, [id, order]] : acc), []),\n          });\n        },\n        update: (order) => {\n          this.updateQuery({\n            order,\n          });\n        },\n        reorder: (sourceIndex, destinationIndex) => {\n          if (sourceIndex == null || destinationIndex == null) {\n            return;\n          }\n\n          const nextArray = moveItemInArray(orderMembers, sourceIndex, destinationIndex);\n          this.orderMembersOrderKeys = nextArray.map(({ id }) => id);\n\n          this.updateQuery({\n            order: nextArray.reduce((acc, { id, order }) => (order !== 'none' ? [...acc, [id, order]] : acc), []),\n          });\n        },\n      },\n      pivotConfig,\n      updatePivotConfig: {\n        moveItem: ({ sourceIndex, destinationIndex, sourceAxis, destinationAxis }) => {\n          this.updateVizState({\n            pivotConfig: movePivotItem(pivotConfig, sourceIndex, destinationIndex, sourceAxis, destinationAxis),\n          });\n        },\n        update: (config) => {\n          const { limit } = config;\n\n          this.updateVizState({\n            pivotConfig: {\n              ...pivotConfig,\n              ...config,\n            },\n            ...(limit ? { query: { ...query, limit } } : null),\n          });\n        },\n      },\n      missingMembers,\n      refresh: this.fetchMeta,\n      isFetchingMeta,\n      dryRunResponse,\n      ...queryRendererProps,\n    };\n  }\n\n  updateQuery(queryUpdate) {\n    const { query } = this.state;\n\n    this.updateVizState({\n      query: removeEmptyQueryFields({\n        ...query,\n        ...queryUpdate,\n      }),\n    });\n  }\n\n  async updateVizState(state) {\n    const { setQuery, setVizState } = this.props;\n    const { query: stateQuery, pivotConfig: statePivotConfig, chartType, meta } = this.state;\n\n    const finalState = this.applyStateChangeHeuristics(state);\n    if (!finalState.query) {\n      finalState.query = { ...stateQuery };\n    }\n\n    let vizStateSent = null;\n    const handleVizStateChange = (currentState) => {\n      const { onVizStateChanged } = this.props;\n      if (onVizStateChanged) {\n        const newVizState = pick(['chartType', 'pivotConfig', 'query'], currentState);\n        // Don't run callbacks more than once unless the viz state has changed since last time\n        if (!vizStateSent || !equals(vizStateSent, newVizState)) {\n          onVizStateChanged(newVizState);\n          // use clone to make sure we don't save object references\n          vizStateSent = clone(newVizState);\n        }\n      }\n    };\n\n    // deprecated, setters replaced by onVizStateChanged\n    const runSetters = (currentState) => {\n      if (setVizState) {\n        setVizState(pick(['chartType', 'pivotConfig', 'query'], currentState));\n      }\n      if (currentState.query && setQuery) {\n        setQuery(currentState.query);\n      }\n    };\n\n    if (finalState.shouldApplyHeuristicOrder) {\n      finalState.query.order = defaultOrder(finalState.query);\n    }\n\n    finalState.pivotConfig = ResultSet.getNormalizedPivotConfig(\n      finalState.query,\n      finalState.pivotConfig !== undefined ? finalState.pivotConfig : statePivotConfig\n    );\n\n    finalState.missingMembers = this.getMissingMembers(finalState.query, meta);\n    finalState.chartType = finalState.chartType || state.chartType || chartType;\n\n    // deprecated\n    runSetters({\n      ...state,\n      query: finalState.query,\n    });\n\n    // Update optimistically so that UI does not stutter\n    this.setState({\n      ...finalState,\n      queryError: null,\n    });\n\n    handleVizStateChange(finalState);\n\n    const shouldFetchDryRun = !equals(\n      pick(['measures', 'dimensions', 'timeDimensions'], stateQuery),\n      pick(['measures', 'dimensions', 'timeDimensions'], finalState.query)\n    );\n\n    if (shouldFetchDryRun && isQueryPresent(finalState.query) && finalState.missingMembers.length === 0) {\n      try {\n        const response = await this.cubeApi().dryRun(finalState.query, {\n          mutexObj: this.mutexObj,\n        });\n\n        if (finalState.shouldApplyHeuristicOrder) {\n          finalState.query.order = (response.queryOrder || []).reduce((memo, current) => ({ ...memo, ...current }), {});\n        }\n\n        finalState.pivotConfig = ResultSet.getNormalizedPivotConfig(response.pivotQuery, finalState.pivotConfig);\n        finalState.validatedQuery = this.validatedQuery(finalState);\n        finalState.dryRunResponse = response;\n\n        // deprecated\n        if (isQueryPresent(stateQuery)) {\n          runSetters({\n            ...this.state,\n            ...finalState,\n          });\n        }\n      } catch (error) {\n        this.setState({\n          queryError: new Error(error.response?.plainError || error.message),\n          richQueryError: new Error(error.message || error.toString())\n        });\n      }\n    }\n\n    this.setState(finalState, () => handleVizStateChange(this.state));\n  }\n\n  validatedQuery(state) {\n    const { query } = state || this.state;\n\n    return validateQuery(query);\n  }\n\n  defaultHeuristics(newState) {\n    const { query, sessionGranularity, meta } = this.state;\n\n    return defaultHeuristics(newState, query, {\n      meta,\n      sessionGranularity: sessionGranularity || 'day',\n    });\n  }\n\n  applyStateChangeHeuristics(newState) {\n    const { stateChangeHeuristics, disableHeuristics } = this.props;\n    if (disableHeuristics) {\n      return newState;\n    }\n    return (stateChangeHeuristics && stateChangeHeuristics(this.state, newState)) || this.defaultHeuristics(newState);\n  }\n\n  render() {\n    const { query } = this.state;\n    const { cubeApi, render, wrapWithQueryRenderer } = this.props;\n\n    if (wrapWithQueryRenderer) {\n      return (\n        <QueryRenderer\n          query={query}\n          cubeApi={cubeApi}\n          resetResultSetOnChange={false}\n          render={(queryRendererProps) => {\n            if (render) {\n              return render(this.prepareRenderProps(queryRendererProps));\n            }\n            return null;\n          }}\n        />\n      );\n    } else {\n      if (render) {\n        return render(this.prepareRenderProps());\n      }\n      return null;\n    }\n  }\n}\n","import React from 'react';\nimport CubeContext from './CubeContext';\n\nexport default function CubeProvider({ cubeApi, children, options = {} }) {\n  return (\n    <CubeContext.Provider value={{\n      cubeApi,\n      options\n    }}\n    >\n      {children}\n    </CubeContext.Provider>\n  );\n}\n","import { useRef } from 'react';\nimport { equals } from 'ramda';\n\nexport default function useDeepCompareMemoize(value) {\n  const ref = useRef([]);\n\n  if (!equals(value, ref.current)) {\n    ref.current = value;\n  }\n\n  return ref.current;\n}\n","import { useEffect, useRef } from 'react';\n\nexport function useIsMounted() {\n  const isMounted = useRef(false);\n\n  useEffect(() => {\n    isMounted.current = true;\n\n    return () => {\n      isMounted.current = false;\n    };\n  }, []);\n\n  return () => isMounted.current;\n}\n","import { useContext, useEffect, useState, useRef } from 'react';\nimport { isQueryPresent } from '@cubejs-client/core';\n\nimport CubeContext from '../CubeContext';\nimport useDeepCompareMemoize from './deep-compare-memoize';\nimport { useIsMounted } from './is-mounted';\n\nexport function useCubeFetch(method, options = {}) {\n  const isMounted = useIsMounted();\n  const context = useContext(CubeContext);\n  const mutexRef = useRef({});\n\n  const [response, setResponse] = useState({\n    isLoading: false,\n    response: null,\n  });\n  const [error, setError] = useState(null);\n\n  const { skip = false } = options;\n\n  async function load(loadOptions = {}, ignoreSkip = false) {\n    const cubeApi = options.cubeApi || context?.cubeApi;\n    const query = loadOptions.query || options.query;\n\n    const queryCondition = method === 'meta' ? true : query && isQueryPresent(query);\n\n    if (cubeApi && (ignoreSkip || !skip) && queryCondition) {\n      setError(null);\n      setResponse({\n        isLoading: true,\n        response: null,\n      });\n\n      const coreOptions = {\n        mutexObj: mutexRef.current,\n        mutexKey: method,\n      };\n      const args = method === 'meta' ? [coreOptions] : [query, coreOptions];\n\n      try {\n        const response = await cubeApi[method](...args);\n\n        if (isMounted()) {\n          setResponse({\n            response,\n            isLoading: false,\n          });\n        }\n      } catch (error) {\n        if (isMounted()) {\n          setError(error);\n          setResponse({\n            isLoading: false,\n            response: null,\n          });\n        }\n      }\n    }\n  }\n\n  useEffect(() => {\n    load();\n  }, useDeepCompareMemoize([Object.keys(options.query?.order || {}), options, context]));\n\n  return {\n    ...response,\n    error,\n    refetch: (options) => load(options, true),\n  };\n}\n","import { useCubeFetch } from './cube-fetch';\n\nexport function useCubeSql(query, options = {}) {\n  return useCubeFetch('sql', {\n    ...options,\n    query\n  });\n}\n","import { useCubeFetch } from './cube-fetch';\n\nexport function useDryRun(query, options = {}) {\n  return useCubeFetch('dryRun', {\n    ...options,\n    query,\n  });\n}\n","import { useCubeFetch } from './cube-fetch';\n\nexport function useLazyDryRun(query, options = {}) {\n  const { refetch, ...result } = useCubeFetch('dryRun', {\n    ...options,\n    query,\n    skip: true\n  });\n\n  return [refetch, result];\n}\n","import { useContext, useEffect, useState, useRef } from 'react';\nimport { isQueryPresent, areQueriesEqual } from '@cubejs-client/core';\n\nimport CubeContext from '../CubeContext';\nimport useDeepCompareMemoize from './deep-compare-memoize';\nimport { useIsMounted } from './is-mounted';\n\nexport function useCubeQuery(query, options = {}) {\n  const mutexRef = useRef({});\n  const isMounted = useIsMounted();\n  const [currentQuery, setCurrentQuery] = useState(null);\n  const [isLoading, setLoading] = useState(false);\n  const [resultSet, setResultSet] = useState(null);\n  const [progress, setProgress] = useState(null);\n  const [error, setError] = useState(null);\n  const context = useContext(CubeContext);\n\n  let subscribeRequest = null;\n\n  const progressCallback = ({ progressResponse }) => setProgress(progressResponse);\n\n  async function fetch() {\n    const { resetResultSetOnChange } = options;\n    const cubeApi = options.cubeApi || context?.cubeApi;\n\n    if (!cubeApi) {\n      throw new Error('Cube API client is not provided');\n    }\n\n    if (resetResultSetOnChange) {\n      setResultSet(null);\n    }\n\n    setError(null);\n    setLoading(true);\n    \n    try {\n      const response = await cubeApi.load(query, {\n        mutexObj: mutexRef.current,\n        mutexKey: 'query',\n        progressCallback,\n        castNumerics: Boolean(typeof options.castNumerics === 'boolean' ? options.castNumerics : context?.options?.castNumerics)\n      });\n\n      if (isMounted()) {\n        setResultSet(response);\n        setProgress(null);\n      }\n    } catch (error) {\n      if (isMounted()) {\n        setError(error);\n        setResultSet(null);\n        setProgress(null);\n      }\n    }\n\n    if (isMounted()) {\n      setLoading(false);\n    }\n  }\n\n  useEffect(() => {\n    const { skip = false, resetResultSetOnChange } = options;\n\n    const cubeApi = options.cubeApi || context?.cubeApi;\n\n    if (!cubeApi) {\n      throw new Error('Cube API client is not provided');\n    }\n\n    async function loadQuery() {\n      if (!skip && isQueryPresent(query)) {\n        if (!areQueriesEqual(currentQuery, query)) {\n          if (resetResultSetOnChange == null || resetResultSetOnChange) {\n            setResultSet(null);\n          }\n          setCurrentQuery(query);\n        }\n\n        setError(null);\n        setLoading(true);\n\n        try {\n          if (subscribeRequest) {\n            await subscribeRequest.unsubscribe();\n            subscribeRequest = null;\n          }\n\n          if (options.subscribe) {\n            subscribeRequest = cubeApi.subscribe(\n              query,\n              {\n                mutexObj: mutexRef.current,\n                mutexKey: 'query',\n                progressCallback,\n              },\n              (e, result) => {\n                if (isMounted()) {\n                  if (e) {\n                    setError(e);\n                  } else {\n                    setResultSet(result);\n                  }\n                  setLoading(false);\n                  setProgress(null);\n                }\n              }\n            );\n          } else {\n            await fetch();\n          }\n        } catch (e) {\n          if (isMounted()) {\n            setError(e);\n            setResultSet(null);\n            setLoading(false);\n            setProgress(null);\n          }\n        }\n      }\n    }\n\n    loadQuery();\n\n    return () => {\n      if (subscribeRequest) {\n        subscribeRequest.unsubscribe();\n        subscribeRequest = null;\n      }\n    };\n  }, useDeepCompareMemoize([query, Object.keys((query && query.order) || {}), options, context]));\n\n  return {\n    isLoading,\n    resultSet,\n    error,\n    progress,\n    previousQuery: currentQuery,\n    refetch: fetch\n  };\n}\n","import { useCubeFetch } from './cube-fetch';\n\nexport function useCubeMeta(options = {}) {\n  return useCubeFetch('meta', options);\n}\n"],"names":["createContext","QueryRenderer","_React$Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","state","mutexObj","_createClass","key","value","componentDidMount","_this$props","query","queries","load","loadQueries","shouldComponentUpdate","nextProps","nextState","_this$props2","render","cubeApi","loadSql","updateOnlyOnStateChange","equals","componentDidUpdate","prevProps","_this$props3","context","_this2","resetResultSetOnChange","setState","_objectSpread","isLoading","error","sqlQuery","resultSet","isQueryPresent","sql","mutexKey","then","Promise","all","_ref","_ref2","_slicedToArray","_this3","resultPromises","toPairs","map","_ref3","_ref4","name","r","fromPairs","_error$response","_this$state","loadState","Error","response","plainError","message","toString","loadingState","React","Component","_defineProperty","CubeContext","QueryRendererWithTotals","restProps","_objectWithoutProperties","_excluded","createElement","_extends","totals","dimensions","timeDimensions","td","granularity","undefined","main","removeEmpty","obj","Array","isArray","_typeof","Object","fromEntries","entries","filter","v","k","granularities","title","QueryBuilder","_assertThisInitialized","_asyncToGenerator","_regeneratorRuntime","mark","_callee","meta","metaError","richMetaError","metaErrorStack","_error$response2","_error$response2$stac","wrap","_callee$","_context","prev","next","abrupt","isFetchingMeta","sent","t0","stack","replace","updateQuery","stop","defaultQuery","chartType","defaultChartType","validatedQuery","missingMembers","dryRunResponse","vizState","initialVizState","orderMembersOrderKeys","_componentDidMount","_callee2","_callee2$","_context2","prevContext","fetchMeta","apply","arguments","_componentDidUpdate","_callee4","_this$prevContext","_this$context","schemaVersion","onSchemaChange","newMeta","_callee4$","_context4","refresh","_refresh","_callee3","_callee3$","_context3","_x","getMissingMembers","getQueryMembers","member","resolvedMember","resolveMember","Boolean","prepareRenderProps","queryRendererProps","getName","toTimeDimension","rangeSelection","compareDateRange","dateRange","dimension","toFilter","_member$member","_member$dimension","operator","includes","values","updateMethods","memberType","toQuery","length","add","concat","remove","_","index","update","updateWith","members","splice","queryError","pivotConfig","flatFilters","uniqBy","prop","flattenFilters","filters","m","i","operators","filterOperatorsForMember","measures","segments","availableMeasures","availableDimensions","availableSegments","availableFilterMembers","availableMembers","membersGroupedByCube","membersForQuery","indexedMeasures","indexBy","indexedDimensions","cubeNames","uniq","_toConsumableArray","keys","sort","_indexedMeasures$name","_indexedDimensions$na","cube","a","b","shortTitle","activeOrder","order","orderMembers","id","find","availableTimeDimensions","type","queryUpdate","updateMeasures","updateDimensions","updateSegments","updateTimeDimensions","updateFilters","updateChartType","newChartType","updateVizState","updateOrder","set","memberId","newOrder","orderMember","reduce","acc","_ref5","reorder","sourceIndex","destinationIndex","nextArray","moveItemInArray","_ref6","_ref7","updatePivotConfig","moveItem","_ref8","sourceAxis","destinationAxis","movePivotItem","config","limit","removeEmptyQueryFields","_updateVizState","_callee5","_this4","setQuery","setVizState","_this$state2","stateQuery","statePivotConfig","finalState","vizStateSent","handleVizStateChange","runSetters","shouldFetchDryRun","_error$response3","_callee5$","_context5","applyStateChangeHeuristics","currentState","onVizStateChanged","newVizState","pick","clone","shouldApplyHeuristicOrder","defaultOrder","ResultSet","getNormalizedPivotConfig","dryRun","queryOrder","memo","current","pivotQuery","richQueryError","_x2","_ref9","validateQuery","defaultHeuristics","newState","_this$state3","sessionGranularity","stateChangeHeuristics","disableHeuristics","_this5","_this$props4","wrapWithQueryRenderer","getDerivedStateFromProps","_ref10","currentQuery","CubeProvider","children","_ref$options","options","Provider","useDeepCompareMemoize","ref","useRef","useIsMounted","isMounted","useEffect","useCubeFetch","method","_options$query","useContext","mutexRef","_useState","useState","_useState2","setResponse","_useState3","_useState4","setError","_options$skip","skip","_load","loadOptions","ignoreSkip","queryCondition","coreOptions","args","_response","_args","refetch","useCubeSql","useDryRun","useLazyDryRun","_useCubeFetch","result","useCubeQuery","setCurrentQuery","setLoading","_useState5","_useState6","setResultSet","_useState7","_useState8","progress","setProgress","_useState9","_useState10","subscribeRequest","progressCallback","progressResponse","fetch","_fetch","_context$options","castNumerics","loadQuery","_loadQuery","areQueriesEqual","unsubscribe","subscribe","e","previousQuery","useCubeMeta"],"mappings":"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"}